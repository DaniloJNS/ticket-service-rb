# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  ruby-setup:
    description: Install Bundler and dependencies
    steps:
      - run:
          name: Ruby Version
          command: |
            ruby --version
      - run:
          name: Install Bundler
          command: |
            BUNDLER_VERSION=$(awk '/BUNDLED WITH/ { getline; print $1 }' Gemfile.lock) \
              && gem install --no-document bundler -v $BUNDLER_VERSION
      - restore_cache:
          key: billingcloud-ruby-{{ .Branch }}{{ checksum "Gemfile.lock" }}
      - run:
          name: Install Bundler dependencies
          command: |
            bundle install
      - save_cache:
          key: billingcloud-ruby-{{ .Branch }}{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  unit-test:
    docker:
      - image: circleci/ruby:2.5.3
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          POSTGRESQL_USER: postgres
          POSTGRESQL_PASSWORD: postgres
          POSTGRESQL_HOST: localhost
          MESSAGE_BROKER_URL: amqp://guest:guest@localhost
      - image: circleci/postgres:11
        environment:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "billingcloud_development"
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run: cp .env.development .env
      - ruby-setup
      - run: |
          bundle exec rake db:create
          bundle exec rake db:schema:load
          bundle exec rspec --tty \
                            --colour \
                            --profile 10 \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
  security-test:
    docker:
      - image: circleci/ruby:2.5.3
    steps:
      - checkout
      - run:
          name: Running brakeman
          command: |
            ruby --version
            gem install brakeman
            brakeman --color --no-exit-on-warn -o /dev/stdout -o brakeman-output.html
      - store_artifacts:
          path: brakeman-output.html
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
      - unit-test
      - security-test
